/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Lesson10.projects;

import Lesson10.insertRemove.Person;
import static Lesson10.insertRemove.PersonArrayList.findInsertPoint;
import static Lesson10.projects.SearchingAssignment.search;
import java.util.ArrayList;
import static java.util.Collections.list;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author just5040
 */
public class PersonProject extends javax.swing.JFrame {

    /**
     * Creates new form PersonProject
     */
    ArrayList<Person> people = new ArrayList();
    DefaultListModel model = new DefaultListModel();

    public PersonProject() {
        initComponents();
        people.add(new Person("Bob", "M", 25));
        people.add(new Person("Fran", "F", 55));
        people.add(new Person("Mike", "M", 15));
        people.add(new Person("Sue", "F", 30));
        //connect model to list 
        lstpeople.setModel(model);
        //add names to the model
        for (Person p : people) {
            model.addElement(p.getName());
        }

    }

    public void show(Person p) {
        txtname.setText(p.getName());
        txtage.setText("" + p.getAge());

        if (p.getGender().equals("M")) {
            optmale.setSelected(true);
        } else {
            optfemale.setSelected(true);
        }
    }

    public static int search(ArrayList a, Object searchValue) {
        int left = 0;
        int right = a.size() - 1;
        while (left <= right) {
            int midpoint = (left + right) / 2;
            int result = ((Comparable) a.get(midpoint)).compareTo(searchValue);
            if (result == 0) {
                return midpoint;
            } else if (result < 0) {
                left = midpoint + 1;
            } else {
                right = midpoint - 1;
            }
        }
        return -1;

    }

    public static int findInsertPoint(ArrayList a, Object searchValue) {
        int left = 0;
        int right = a.size() - 1;
        int midpoint = 0;

        while (left <= right) {
            midpoint = (left + right) / 2;

            int result = ((Comparable) a.get(midpoint)).compareTo(searchValue);

            if (result < 0) {
                left = midpoint + 1;
            } else {
                right = midpoint - 1;
            }
        }
        if (((Comparable) a.get(midpoint)).compareTo(searchValue) < 0) {
            midpoint++;
        }
        return midpoint;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstpeople = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtage = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        optmale = new javax.swing.JRadioButton();
        optfemale = new javax.swing.JRadioButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menExit = new javax.swing.JMenu();
        menEx = new javax.swing.JCheckBoxMenuItem();
        clearmen = new javax.swing.JMenu();
        menCle = new javax.swing.JMenuItem();
        menAdd = new javax.swing.JMenuItem();
        menDel = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        menShowAll = new javax.swing.JMenuItem();
        menMale = new javax.swing.JMenuItem();
        menFem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lstpeople.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstpeopleMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstpeople);

        jLabel1.setText("Name:");

        jLabel2.setText("Age");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonGroup1.add(optmale);
        optmale.setText("Male");
        optmale.setActionCommand("M");

        buttonGroup1.add(optfemale);
        optfemale.setText("Female");
        optfemale.setActionCommand("F");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(optmale, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(optfemale)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(optmale)
                    .addComponent(optfemale))
                .addContainerGap())
        );

        menExit.setText("File");

        menEx.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        menEx.setSelected(true);
        menEx.setText("Exit");
        menEx.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Lesson10/insertRemove/exit.png"))); // NOI18N
        menEx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menExActionPerformed(evt);
            }
        });
        menExit.add(menEx);

        jMenuBar1.add(menExit);

        clearmen.setText("Edit");

        menCle.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        menCle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Lesson10/insertRemove/exit.png"))); // NOI18N
        menCle.setText("Clear");
        menCle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menCleActionPerformed(evt);
            }
        });
        clearmen.add(menCle);

        menAdd.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        menAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Lesson10/insertRemove/insert.png"))); // NOI18N
        menAdd.setText("Add");
        menAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menAddActionPerformed(evt);
            }
        });
        clearmen.add(menAdd);

        menDel.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        menDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Lesson10/insertRemove/delete.png"))); // NOI18N
        menDel.setText("Delete");
        menDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menDelActionPerformed(evt);
            }
        });
        clearmen.add(menDel);

        jMenuBar1.add(clearmen);

        jMenu3.setText("Filter");

        menShowAll.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        menShowAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Lesson10/insertRemove/all.png"))); // NOI18N
        menShowAll.setText("Show All");
        menShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menShowAllActionPerformed(evt);
            }
        });
        jMenu3.add(menShowAll);

        menMale.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.ALT_MASK));
        menMale.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Lesson10/insertRemove/male.png"))); // NOI18N
        menMale.setText("Male");
        menMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menMaleActionPerformed(evt);
            }
        });
        jMenu3.add(menMale);

        menFem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.ALT_MASK));
        menFem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Lesson10/insertRemove/female.png"))); // NOI18N
        menFem.setText("Female");
        menFem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menFemActionPerformed(evt);
            }
        });
        jMenu3.add(menFem);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtname)
                            .addComponent(txtage, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtage, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menExActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menExActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menExActionPerformed

    private void menDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menDelActionPerformed
        int loc;
        String name = lstpeople.getSelectedValue();
        Person temp = new Person (name, "", 0);
        loc = search(people, temp);
        model.removeElementAt(lstpeople.getSelectedIndex());
        people.remove(loc);
        txtname.setText("");
        txtage.setText("");
        buttonGroup1.clearSelection();
                
         
    }//GEN-LAST:event_menDelActionPerformed

    private void menMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menMaleActionPerformed
        model.clear();
        for (Person p : people) {
            if(p.getGender()=="M")
            model.addElement(p.getName());
        }
    }//GEN-LAST:event_menMaleActionPerformed

    private void menFemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menFemActionPerformed
        model.clear();
        for (Person p : people) {
            if(p.getGender()=="F")
            model.addElement(p.getName());
        }
    }//GEN-LAST:event_menFemActionPerformed

    private void menShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menShowAllActionPerformed
        model.clear();
        for (Person p : people) {
            model.addElement(p.getName());
        }

    }//GEN-LAST:event_menShowAllActionPerformed

    private void lstpeopleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstpeopleMouseClicked
        //read which name was chosen
        String name = lstpeople.getSelectedValue(); //gets name selected on list
        //search ArrayList for its location
        int loc = search(people, new Person(name, "", 0));
        //get that person from ArrayList and send them into show
        show(people.get(loc));
    }//GEN-LAST:event_lstpeopleMouseClicked

    private void menCleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menCleActionPerformed
        txtname.setText("");
        txtage.setText("");
        buttonGroup1.clearSelection();
        lstpeople.clearSelection();
    }//GEN-LAST:event_menCleActionPerformed

    private void menAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menAddActionPerformed
        String nm, gen;
        int age, loc;
        try {
            nm = txtname.getText();
            age = Integer.parseInt(txtage.getText());
            gen = buttonGroup1.getSelection().getActionCommand();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Must fill out form correctly");
            return;
        }
        Person temp1 = new Person(nm, "", 0);
        int checkloc = search(people, temp1);
        if (checkloc > -1) {
            JOptionPane.showMessageDialog(this, "Must use unique name");
            return;
        } else {
            Person temp2 = new Person(nm, gen, age);
            loc = findInsertPoint(people, temp2);
            people.add(loc, temp2);
            model.clear();
            for (Person p : people) {
                model.addElement(p.getName());
            }

        }
    }//GEN-LAST:event_menAddActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PersonProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PersonProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PersonProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PersonProject().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenu clearmen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lstpeople;
    private javax.swing.JMenuItem menAdd;
    private javax.swing.JMenuItem menCle;
    private javax.swing.JMenuItem menDel;
    private javax.swing.JCheckBoxMenuItem menEx;
    private javax.swing.JMenu menExit;
    private javax.swing.JMenuItem menFem;
    private javax.swing.JMenuItem menMale;
    private javax.swing.JMenuItem menShowAll;
    private javax.swing.JRadioButton optfemale;
    private javax.swing.JRadioButton optmale;
    private javax.swing.JTextField txtage;
    private javax.swing.JTextField txtname;
    // End of variables declaration//GEN-END:variables
}
